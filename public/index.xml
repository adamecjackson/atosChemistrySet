<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Canopy Chemistry Set for XP Teams</title>
    <link>http://xp-chemistry-set.cfapps.io/</link>
    <description>Recent content on Canopy Chemistry Set for XP Teams</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>Copyright (c) 2016, Canopy Cloud; All rights reserved.</copyright>
    <lastBuildDate>Mon, 20 Jul 2015 12:07:29 +0100</lastBuildDate>
    <atom:link href="http://xp-chemistry-set.cfapps.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Reading</title>
      <link>http://xp-chemistry-set.cfapps.io/Reading/</link>
      <pubDate>Mon, 20 Jul 2015 12:07:29 +0100</pubDate>
      
      <guid>http://xp-chemistry-set.cfapps.io/Reading/</guid>
      <description>

&lt;h2 id=&#34;recommended-books:19d8348423abdd190444f92a1e17b5db&#34;&gt;Recommended books&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Extreme-Programming-Explained-Embrace-Change/dp/0321278658/ref=sr_1_1?ie=UTF8&amp;amp;qid=1418149357&amp;amp;sr=8-1&#34;&gt;XP Explained: Embrace Change&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/RSpec-Book-Behaviour-Development-Cucumber/dp/1934356379/ref=sr_1_1?ie=UTF8&amp;amp;qid=1437411662&amp;amp;sr=8-1&#34;&gt;The RSpec Book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Pair-Programming-Illuminated-Laurie-Williams/dp/0201745763&#34;&gt;Pair Programming Illuminated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Continuous-Delivery-Deployment-Automation-Addison-Wesley/dp/0321601912/ref=sr_1_1?ie=UTF8&amp;amp;qid=1437411699&amp;amp;sr=8-1&#34;&gt;Continuous Delivery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Building-Microservices-Sam-Newman/dp/1491950358/ref=sr_1_1?ie=UTF8&amp;amp;qid=1437411719&amp;amp;sr=8-1&#34;&gt;Building Microservices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Goal-Process-Ongoing-Improvement/dp/0566086654/ref=sr_1_1?ie=UTF8&amp;amp;qid=1437411750&amp;amp;sr=8-1&#34;&gt;The Goal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Phoenix-Project-DevOps-Helping-Business/dp/0988262509/ref=sr_1_1?ie=UTF8&amp;amp;qid=1437411780&amp;amp;sr=8-1&#34;&gt;The Pheonix Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Four-Steps-Epiphany-Successful-Strategies/dp/0989200507/ref=sr_1_1?ie=UTF8&amp;amp;qid=1437411807&amp;amp;sr=8-1&#34;&gt;Four Steps to the Epiphany&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Lean-Startup-Innovation-Successful-Businesses/dp/0670921602/ref=sr_1_1?ie=UTF8&amp;amp;qid=1437411829&amp;amp;sr=8-1&#34;&gt;The Lean Startup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Planning-Extreme-Programming-Tom-DeMarco/dp/0201710919/ref=sr_1_1?ie=UTF8&amp;amp;qid=1437411954&amp;amp;sr=8-1&#34;&gt;Planning Extreme Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Implementing-Lean-Software-Development-Addison-Wesley/dp/0321437381/ref=sr_1_3?ie=UTF8&amp;amp;qid=1437411849&amp;amp;sr=8-3&#34;&gt;Implementing Lean Software Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Agile-Retrospectives-Making-Pragmatic-Programmers/dp/0977616649/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1437678114&amp;amp;sr=1-1&#34;&gt;Agile Retrospectives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Release-Production-Ready-Software-Pragmatic-Programmers/dp/0978739213/ref=sr_1_1?ie=UTF8&amp;amp;qid=1437411890&amp;amp;sr=8-1&#34;&gt;Release It!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Domain-driven-Design-Tackling-Complexity-Software/dp/0321125215/ref=sr_1_1?ie=UTF8&amp;amp;qid=1437411927&amp;amp;sr=8-1&amp;amp;keywords=domain+driven+design&#34;&gt;Domain-Driven Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Refactoring-Improving-Design-Existing-Technology/dp/0201485672/ref=sr_1_1?ie=UTF8&amp;amp;qid=1437412000&amp;amp;sr=8-1&#34;&gt;Refactoring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.uk/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882/ref=sr_1_1?ie=UTF8&amp;amp;qid=1437412016&amp;amp;sr=8-1&#34;&gt;Clean Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Tooling</title>
      <link>http://xp-chemistry-set.cfapps.io/Tooling/</link>
      <pubDate>Mon, 20 Jul 2015 12:07:23 +0100</pubDate>
      
      <guid>http://xp-chemistry-set.cfapps.io/Tooling/</guid>
      <description>

&lt;h2 id=&#34;location-environment:3ad959c38cb8a3acae97a8f6d8efb413&#34;&gt;Location / environment&lt;/h2&gt;

&lt;p&gt;One of the core XP values is communication, and as such co-locating teams is the right way to go if at all possible. Constant feedback and communication between the Product Owner and the engineers builds a better product.&lt;/p&gt;

&lt;p&gt;A colocated XP space should have pairing stations for development, the Product Owner nearby, and available areas so team members can step away from their desks for calls and emails. It should be a pleasant environment to work in and provide the best tools to get the job done. Show respect for your team by making them happy.&lt;/p&gt;

&lt;p&gt;&lt;insert canopy labs photo here&gt;&lt;/p&gt;

&lt;p&gt;All workstations in a team should be consistent to reduce friction when rotating pairs. We thoroughly recommend using automated configuration management for deterministic consistency of development machines, with each team iterating on their own development setup.&lt;/p&gt;

&lt;p&gt;&lt;insert workstations photo here&gt;&lt;/p&gt;

&lt;p&gt;The team should have their own board to clearly illustrate pairings, interruptible pairs if appropriate, records retro items, and show when people are out of the office.&lt;/p&gt;

&lt;p&gt;&lt;insert team board here&gt;&lt;/p&gt;

&lt;p&gt;There should also be table tennis or football available near to the working area to build team relationships and reduce stress. Pair programming is intense, requiring frequent and regular breaks. Table tennis is good for your health.&lt;/p&gt;

&lt;h2 id=&#34;current-tooling-snapshot:3ad959c38cb8a3acae97a8f6d8efb413&#34;&gt;Current tooling snapshot&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Email&lt;/li&gt;
&lt;li&gt;Slack&lt;/li&gt;
&lt;li&gt;Screenhero&lt;/li&gt;
&lt;li&gt;Skype&lt;/li&gt;
&lt;li&gt;Pivotal Tracker&lt;/li&gt;
&lt;li&gt;Appear.in&lt;/li&gt;
&lt;li&gt;Concourse&lt;/li&gt;
&lt;li&gt;Jenkins&lt;/li&gt;
&lt;li&gt;Google docs&lt;/li&gt;
&lt;li&gt;Github / Gitlabs / Bitbucket&lt;/li&gt;
&lt;li&gt;Wardleymaps&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;remote-working:3ad959c38cb8a3acae97a8f6d8efb413&#34;&gt;Remote working&lt;/h2&gt;

&lt;p&gt;Remote working is suboptimal, as it prohibits effective communication, but sometimes necessary. Always start with co-located teams to facilitate communication and build effective relationships, even if you then have to distribute the team.&lt;/p&gt;

&lt;p&gt;The best tooling we have found so far for remote pairing is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Slack&lt;/li&gt;
&lt;li&gt;Appear.in&lt;/li&gt;
&lt;li&gt;Screenhero&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Invest in headsets, webcams, and condenser mics/speakers for meeting rooms. Quality of internet connectivity is usually the determining factor as to the success of remote pairing. If you can&amp;rsquo;t video conference, you&amp;rsquo;re likely to have great difficulty collaborating effectively.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>http://xp-chemistry-set.cfapps.io/Process/</link>
      <pubDate>Mon, 20 Jul 2015 12:07:18 +0100</pubDate>
      
      <guid>http://xp-chemistry-set.cfapps.io/Process/</guid>
      <description>

&lt;h2 id=&#34;feedback-loops:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Feedback Loops&lt;/h2&gt;

&lt;p&gt;XP can be viewed as a series of progressively smaller feedback loops.&lt;/p&gt;

&lt;p&gt;0. Pre-inception&lt;/p&gt;

&lt;p&gt;1. Inception&lt;/p&gt;

&lt;p&gt;2. Iteration Planning Meeting&lt;/p&gt;

&lt;p&gt;3. Standup&lt;/p&gt;

&lt;p&gt;4. TDD&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pair programming&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;4. Acceptance&lt;/p&gt;

&lt;p&gt;3. Standup&lt;/p&gt;

&lt;p&gt;2. Retrospective&lt;/p&gt;

&lt;p&gt;1. Review&lt;/p&gt;

&lt;h2 id=&#34;elements:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Elements&lt;/h2&gt;

&lt;p&gt;The process is outlined in greater detail below. These elements are the defaults we begin with. All cadences should be altered as appropriate. Elements should be added/removed as appropriate. Teams often remove the IPM due to continuous planning, or add a &amp;lsquo;show and tell&amp;rsquo;. Sometimes pre-IPMs are required between the Product Owner and the Anchor to refine complex backlogs. Do what works. Experiment.&lt;/p&gt;

&lt;h3 id=&#34;pre-inception:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Pre-inception&lt;/h3&gt;

&lt;p&gt;The pre-inception takes place before the inception meeting is scheduled.&lt;/p&gt;

&lt;p&gt;In order to incept a backlog of work we would usually look at three key ingredients:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Vision - how are you trying to change the world?&lt;/li&gt;
&lt;li&gt;Product Owner - who holds the vision?&lt;/li&gt;
&lt;li&gt;Engineers - who can move the world towards the vision?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The pre-inception meeting is to look at whether those three core elements are in place, and if not  - what can be done to put them in place?&lt;/p&gt;

&lt;h3 id=&#34;inception:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Inception&lt;/h3&gt;

&lt;p&gt;The inception meeting takes place at the beginning of a project, the birth of a product, or when an existing project/project has a major change of direction.&lt;/p&gt;

&lt;p&gt;The objective of an inception is to achieve consensus on direction. This consensus will be embodied in the inception&amp;rsquo;s output: a pointed, prioritised backlog to enable the team to learn. The team should be able to start working against the backlog immediately after the inception. The backlog might be invalidated by learning gained while delivering the first feature; that&amp;rsquo;s inherent risk while developing in an uncertain environment.&lt;/p&gt;

&lt;p&gt;The right people to have in an inception are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Product Owner(PO) - the person able to articulate WHAT should be built&lt;/li&gt;
&lt;li&gt;Stakeholders - people able to influence / invested in WHAT should be built&lt;/li&gt;
&lt;li&gt;Engineers - the people able to decide HOW to build&lt;/li&gt;
&lt;li&gt;Facilitator - someone able to guide the participants on the inception process and enable all participants to constructively engage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The default agenda will be:&lt;/p&gt;

&lt;h4 id=&#34;intros:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Intros&lt;/h4&gt;

&lt;p&gt;Each person in the room introduces themselves, also mentioning which of the four roles above they are fulfilling in the inception.&lt;/p&gt;

&lt;h4 id=&#34;goals-non-goals:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Goals/non-goals&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Establish a baseline of how the world looks today in the team&amp;rsquo;s domain. An overview from the Product Owner is often helpful here. This is X.&lt;/li&gt;
&lt;li&gt;The Product Owner and stakeholders should outline a vision of how the world should look in the team&amp;rsquo;s domain in the future. This is Y.&lt;/li&gt;
&lt;li&gt;All participants should discuss what a would be acheivable within a limited timescale that would consistute a meaningul step towards Y. The default timescale is approximately twelve weeks. This is Z.&lt;/li&gt;
&lt;li&gt;Progress X - Z is the goals. The focus of the inception will be on these goals.&lt;/li&gt;
&lt;li&gt;Progress Z - Y is the non-goals. They are desireable but will not be attempted yet.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Reaching consensus on a reasonable set of goals is key for a successful inception. Being realistic about a meaningful step forward is a necessity.&lt;/p&gt;

&lt;p&gt;Example goals could be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Facilitate buying and selling of hats online&lt;/li&gt;
&lt;li&gt;Provide metrics of hat sales&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example non-goals could be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Facilitate buying and selling of shoes online&lt;/li&gt;
&lt;li&gt;Determine trends in online sales of clothing accessories&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;risks:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Risks&lt;/h4&gt;

&lt;p&gt;Ask each participant to consider what is likely to block the team&amp;rsquo;s ability to deliver the goals. These risks should then be written on cards, one card per risk, and then handed to the facilitator. Every participant should be invited to offer at least one risk.&lt;/p&gt;

&lt;p&gt;Example risks would be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lack of customer feedback&lt;/li&gt;
&lt;li&gt;Shortage of engineers&lt;/li&gt;
&lt;li&gt;Inheritance of legacy codebase&lt;/li&gt;
&lt;li&gt;Lack of experience in new methodology&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The facilitator should read out the cards, allocating them into thematic groups and allowing their authors to add a sentence or two of context if necessary.&lt;/p&gt;

&lt;p&gt;Once all cards are grouped a process of &lt;a href=&#34;http://martinfowler.com/bliki/DotVoting.html&#34;&gt;dot-voting&lt;/a&gt; can be undertaken to rank the risk groups. Discuss the &amp;lsquo;riskiest&amp;rsquo; groups.&lt;/p&gt;

&lt;p&gt;The risk process is not necessarily about alleviating or even mitigating risks; the purpose is to exhange information between participants. A shared understanding of fears and potential pitfalls is extremely valuable.&lt;/p&gt;

&lt;h4 id=&#34;actors:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Actors&lt;/h4&gt;

&lt;p&gt;The actors are any groups that will benefit from the goals being delivered. Examples are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hat buyer&lt;/li&gt;
&lt;li&gt;Web admin&lt;/li&gt;
&lt;li&gt;Hat seller&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Actors are effectively a simplified version of &lt;a href=&#34;http://www.agilemodeling.com/artifacts/personas.htm&#34;&gt;agile personas&lt;/a&gt;. They will be used to word the features to encourage empathy with the people that will derive value from the output.&lt;/p&gt;

&lt;p&gt;It is usually better to begin with a simple, straightforward, comprehensible set of actors than to attempt to create an exhaustive list. Actors will often emerge as learning increases on the team.&lt;/p&gt;

&lt;p&gt;Be careful not to use team members as actors. The focus of the team needs to be on delivering value for others, not itself.&lt;/p&gt;

&lt;h4 id=&#34;activities:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Activities&lt;/h4&gt;

&lt;p&gt;If the goals are delivered, how do the actors benefit? The answers to that question form the activities. Activities form an intermediary step between the broad brush-stokes of goals and the granular nature of stories. In smaller inceptions, or where the goals are already granular, this step is sometimes skipped.&lt;/p&gt;

&lt;p&gt;Example activities could be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As a hat buyer I can review hats for sale&lt;/li&gt;
&lt;li&gt;As a hat buyer I can buy a hat&lt;/li&gt;
&lt;li&gt;As a hat seller I can see how many hats have been sold&lt;/li&gt;
&lt;li&gt;As a web admin I can see that the hat sales site is operational&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;stories:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Stories&lt;/h4&gt;

&lt;p&gt;The &amp;lsquo;Stories&amp;rsquo; phase of the inception breaks into three distinct elements.&lt;/p&gt;

&lt;p&gt;1. Story mapping. Take the activities and break them down to the level where the engineers would be confident to &amp;lsquo;point&amp;rsquo; them. This can require significant discussion as pointing requires engineering consensus as to how the value will be delivered. These discussions are the &amp;lsquo;magic&amp;rsquo; in Extreme Programming - aligning what is to be delivered with how it is going to be delivered through communication between the Product Owner and the engineers.&lt;/p&gt;

&lt;p&gt;Stories must always be worded with respect to the actor benefiting from the story being delivered and not specify how the story is delivered.&lt;/p&gt;

&lt;p&gt;Example stories could be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As a hat buyer I can see an image of a panama hat on the hats page&lt;/li&gt;
&lt;li&gt;As a hat buyer I can click a &amp;lsquo;buy&amp;rsquo; button on a hat and it appears in my basket&lt;/li&gt;
&lt;li&gt;As a hat seller I can see the number of hats sold in the last week on the hat sales page&lt;/li&gt;
&lt;li&gt;As a web admin I can see &amp;lsquo;front page - OK&amp;rsquo; if the site is responding to GET requests to / without error.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2. Story pointing. Ask the engineers to review the stories and chose an archetypal story that represents a meaningful unit of work. This is likely to be a story where uncertainty and engineering effort are low. For example, a conversation with the PO, a simple test, a change to a class or two, and deployment. This story will form the basis for a one point story.&lt;/p&gt;

&lt;p&gt;We have tended to use a &amp;lsquo;powers of two&amp;rsquo; pointing scale. Valid values are 0,1,2,4, and 8.&lt;/p&gt;

&lt;p&gt;Zero-point stories are often where the feature has been delivered &amp;lsquo;for free&amp;rsquo; as a repercussion of other work.&lt;/p&gt;

&lt;p&gt;One-point stories are granular elements of work. An ideal backlog would be entirely one-point stories so value is incrementally delivered in small units with fast feedback.&lt;/p&gt;

&lt;p&gt;Two- and four-point stories are where uncertainty, complexity, or both are higher than a one-point story. A four-point story is the limit of uncertainty or complexity a pair of engineers would be willing to estimate.&lt;/p&gt;

&lt;p&gt;We use eight-point stories as placeholders in the backlog, but do not start work on them until they&amp;rsquo;re broken down to more granular stories. Eight-point stories are often preceeded by a chore to undertake some investigatory work to reduce uncertainty and create more granular stories in the place of the eight-point story.&lt;/p&gt;

&lt;p&gt;Resist the urge to use time as a proxy for pointing. Over time your team will move towards a &amp;lsquo;peforming&amp;rsquo; state, delivering more value in less time, so time needs to be abstracted from complexity/uncertainty.&lt;/p&gt;

&lt;p&gt;We have two different mechanisms for pointing as a social exercise. Only engineers can offer engineering pointing estimates - not the PO, stakeholders, or facilitator.&lt;/p&gt;

&lt;p&gt;As a fast way to get stories pointed, try &amp;lsquo;scissors-paper-stone&amp;rsquo;. The facilitator should count 1,2,3 and on 3 the engineers should use their digits to display their estimate.&lt;/p&gt;

&lt;p&gt;If there are any concerns regarding engineers being influenced by other engineers then &amp;lsquo;points poker&amp;rsquo; may be more effective. Give all engineers a set of cards corresponding to the chosen pointing scale. Engineers should, for each story, place their estimate card on the table in front of them. The facilitator should invite the engineers to simulaneously turn over their cards to produce independent estimates.&lt;/p&gt;

&lt;p&gt;The highest- and lowest-estimating engineers should explain their rationale to the group, and the pointing process begin again, until consensus is reached between the engineers on the estimate for the story.&lt;/p&gt;

&lt;p&gt;This process is repeated until all stories are pointed.&lt;/p&gt;

&lt;p&gt;3. Story prioritisation. The Product Owner, with input from the stakeholders, should prioritise the stories with the highest value stories at the top of the backlog. All stories have already been pointed so the estimated relative &amp;lsquo;cost&amp;rsquo; of stories can be used to inform prioritisation. Dependencies between stories can be difficult to manage so repointing may need to occur. Have a conversation. Communication is good.&lt;/p&gt;

&lt;p&gt;The pointed, prioritised backlog should be entered into &lt;a href=&#34;https://www.pivotaltracker.com/&#34;&gt;Pivotal Tracker&lt;/a&gt; by the Product Owner.&lt;/p&gt;

&lt;h4 id=&#34;retro:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Retro&lt;/h4&gt;

&lt;p&gt;Hold a retrospective at the end of the inception. If the participants are unfamiliar with the process then use a simple format such as happy/discuss/sad. Ask all participants to contribute at least one item. If time is really short limit all participants to their one most important item.&lt;/p&gt;

&lt;p&gt;Make your next inception better than your last one.&lt;/p&gt;

&lt;h3 id=&#34;iteration-planning-meeting:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Iteration Planning Meeting&lt;/h3&gt;

&lt;p&gt;Iteration Planning Meetings(IPM) are usually scheduled weekly. The output of the IPM is team consensus on direction. This is embodied in the pointed, prioritised backlog for the next iteration.&lt;/p&gt;

&lt;p&gt;Discuss all work in-flight, and the stories for the next iteration. Re-point, re-prioritise, and discuss as necessary.&lt;/p&gt;

&lt;p&gt;Pivotal Tracker uses emergent velocity to predict team progress so it&amp;rsquo;s usually worthwhile reaching consensus on two predicted iterations&amp;rsquo; worth of work if volatility is high. This ensures the team doesn&amp;rsquo;t &amp;lsquo;run out&amp;rsquo; of pointed, prioritised, discussed backlog.&lt;/p&gt;

&lt;p&gt;The output from the inception is likely to have been exclusively features. Over time bugs and chores will also be useful in the backlog to track work. Bugs and chores are not pointed, as pointing is used to estimate the cost of additional delivered value to the customer, and bugs/chores do not deliver additional value to the customer. Velocity should be an emergent measure used to predict forward progress.&lt;/p&gt;

&lt;h3 id=&#34;standup:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Standup&lt;/h3&gt;

&lt;p&gt;The daily standup should take no longer than five minutes. It should cover:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Announcements&lt;/li&gt;
&lt;li&gt;Yesterday&amp;rsquo;s work&lt;/li&gt;
&lt;li&gt;Blockers&lt;/li&gt;
&lt;li&gt;Pairs / today&amp;rsquo;s work&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We default to a novice/expert approach to pair rotation. Rotate pairs every day. Each in-flight story should have one engineer with context from the previous day and one fresh engineer. This is usually a good compromise between maintaining context and sharing knowledge.&lt;/p&gt;

&lt;h3 id=&#34;tdd:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;TDD&lt;/h3&gt;

&lt;p&gt;Test-Driven Development(TDD) is a continuous process undertaked by engineers.&lt;/p&gt;

&lt;p&gt;The benefits and repercussions of TDD are too numerous to list here. Highlights include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Testing as a design tool&lt;/li&gt;
&lt;li&gt;Abstract behaviour from implementation&lt;/li&gt;
&lt;li&gt;&amp;lsquo;Build quality in&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Isolate dependencies&lt;/li&gt;
&lt;li&gt;Loose coupling&lt;/li&gt;
&lt;li&gt;Fast feedback&lt;/li&gt;
&lt;li&gt;Ease of refactoring&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please refer to the reading list for additional information on TDD.&lt;/p&gt;

&lt;h3 id=&#34;pair-programming:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Pair programming&lt;/h3&gt;

&lt;p&gt;All code should be pair-programmed. Set up pairing stations. The benefits include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fast (immediate) feedback&lt;/li&gt;
&lt;li&gt;Constant communication&lt;/li&gt;
&lt;li&gt;Remove blockers&lt;/li&gt;
&lt;li&gt;Increased focus&lt;/li&gt;
&lt;li&gt;Immediate peer review for quality&lt;/li&gt;
&lt;li&gt;Evolving/emergent consensus on architecture&lt;/li&gt;
&lt;li&gt;Knowledge/skill sharing between engineers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Take regular breaks as pair-programming can be intensive. There are many activities for which pair-programming may not be appropriate, such as research.&lt;/p&gt;

&lt;p&gt;Pairs of engineers should be in constant communication with the Product Owner so they are clear on requirements and can continuously feed back learning to the Product Owner. The Product Owner must be available at all times to answer questions relating to what should be delivered.&lt;/p&gt;

&lt;h3 id=&#34;acceptance:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Acceptance&lt;/h3&gt;

&lt;p&gt;Acceptance should be undertaken on-demand; as soon as features are ready to accept. Any delay between completion of a feature and acceptance is a major issue; context is quickly lost so fast feedback is essential.&lt;/p&gt;

&lt;p&gt;Acceptance should be based upon whether the value is delivered as intended, not whether the feature was delivered to the letter of the definition. This is a learning process so rejections may be necessary before a story is accepted.&lt;/p&gt;

&lt;p&gt;Only the Product Owner can accept stories. Story acceptance is an assertion from the Product Owner that the delivered work is moving the team in the right direction.&lt;/p&gt;

&lt;p&gt;The Product Owner can and should re-prioritise the backlog on a constant basis as they&amp;rsquo;re learning. This is not Scrum; don&amp;rsquo;t continue delivering on a &amp;lsquo;committed&amp;rsquo; backlog once you know it&amp;rsquo;s not moving you in the right direction.&lt;/p&gt;

&lt;h3 id=&#34;standup-again:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Standup (again)&lt;/h3&gt;

&lt;p&gt;The daily standup includes yesterday&amp;rsquo;s work so incorporates both backwards-looking and forwards-looking elements of the process.&lt;/p&gt;

&lt;h3 id=&#34;retrospective:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Retrospective&lt;/h3&gt;

&lt;p&gt;Retrospectives usually take place once a week.&lt;/p&gt;

&lt;p&gt;Retrospectives are the most important element of the process. A team could start with a terrible process but would iterate towards a good process via the feedback gained in retrospectives. I&amp;rsquo;ve never heard a convincing argument for removing retrospectives from the process.&lt;/p&gt;

&lt;p&gt;The retrospective should be focused on improving how you deliver value based upon the feedback and learning from the iteration.&lt;/p&gt;

&lt;p&gt;We usually begin a simple happy/discuss/sad format, and create a list of &amp;lsquo;action points&amp;rsquo; based upon the discussions during the retrospective. We use large whiteboard for the exercise. We ask all team members to contribute at least one item to the retrospective.&lt;/p&gt;

&lt;p&gt;&lt;insert retro photo&gt;&lt;/p&gt;

&lt;p&gt;Please review the reading list for additional information on more advanced retrospective formats.&lt;/p&gt;

&lt;h3 id=&#34;review:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Review&lt;/h3&gt;

&lt;p&gt;Before undertaking a new inception on a team it&amp;rsquo;s worthwhile reviewing progress on a broader scale than a weekly retrospective. Have you been delivering on your strategic goals? What have the major milestones been in the project? What are the emergent patterns from the retrospectives?&lt;/p&gt;

&lt;p&gt;We usually use a timeline format for reviews.&lt;/p&gt;

&lt;h2 id=&#34;advanced-xp:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Advanced XP&lt;/h2&gt;

&lt;h3 id=&#34;multi-team-interaction:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Multi-team interaction&lt;/h3&gt;

&lt;p&gt;Multi-team interaction can cause issues with XP, especially if the teams are not co-located.&lt;/p&gt;

&lt;p&gt;A good pattern is to radiate information. Be open, honest, and communicative with other teams about your progress and your plans. Rotate engineers between the teams. Create pairs of engineers across teams when you&amp;rsquo;re tackling integration points.&lt;/p&gt;

&lt;p&gt;Communication between teams may need a greater level of facilitation than inside a team. People are less likely to interact with each other so natural communication channels, which have proven sufficent within a team, may need artificial reinforcement when communicating between teams.&lt;/p&gt;

&lt;p&gt;Having a single standup for all teams, even if it&amp;rsquo;s remote, can be helpful when facilitating multi-team communication. Ask all teams to contribute something every day - even if it&amp;rsquo;s just saying &amp;lsquo;hello&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;Reporting on progress across multiple teams can be challenging. Grouping thematically-similar features into epics can be helpful to provide oversight across multiple backlogs, as can semantically meaningful release markers.&lt;/p&gt;

&lt;p&gt;Regular meetings of Product Owners can help to facilitate communication around inter-team dependencies. Simple ideas like a regular update email, with progress across all teams summarised, can be very helpful.&lt;/p&gt;

&lt;h3 id=&#34;supporting-processes:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Supporting processes&lt;/h3&gt;

&lt;h4 id=&#34;microservices:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Microservices&lt;/h4&gt;

&lt;p&gt;Dividing large problems into smaller problems, and across multiple teams, lends itself to a &amp;lsquo;microservices&amp;rsquo; architecture. It&amp;rsquo;s important to not over-engineer this up front: let the (micro)services emerge.&lt;/p&gt;

&lt;h4 id=&#34;continuous-delivery:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Continuous Delivery&lt;/h4&gt;

&lt;p&gt;Continuous Delivery brings in a wealth of valuable patterns. The focus on fast feedback makes these patterns of huge value, and great fit, for XP.&lt;/p&gt;

&lt;h4 id=&#34;release-trains-vs-deliverables:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Release trains vs deliverables&lt;/h4&gt;

&lt;p&gt;Rather than guaranteeing a certain set of features by a set date, publish a general strategic roadmap for discussion and release the current completed work when you choose. If you need to block release for a feature you can choose to do so, but you hold the power - rather than a Gantt chart.&lt;/p&gt;

&lt;h4 id=&#34;evolutionary-architecture:ee297dc3858cd4ca78f1a732c8cd6a5c&#34;&gt;Evolutionary architecture&lt;/h4&gt;

&lt;p&gt;Create just enough architecture to gain feedback. Aim to deploy a malleable architecture so it can evolve as you learn, but prioritise simplicitity above malleability. Don&amp;rsquo;t hesitate to sacrifice your architecture if you&amp;rsquo;ve learned it&amp;rsquo;s not for purpose. Every decision taken by the team impacts the emergent architecture; every engineer is an architect and every architect an engineer. Don&amp;rsquo;t design a complex architecture up front, &lt;a href=&#34;http://martinfowler.com/bliki/Yagni.html&#34;&gt;YAGNI&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>People</title>
      <link>http://xp-chemistry-set.cfapps.io/People/</link>
      <pubDate>Mon, 20 Jul 2015 12:07:12 +0100</pubDate>
      
      <guid>http://xp-chemistry-set.cfapps.io/People/</guid>
      <description>

&lt;h2 id=&#34;teams:d33dede33f5022565ebd53a746acb042&#34;&gt;Teams&lt;/h2&gt;

&lt;p&gt;Extreme Programming works well in small teams, sized between approximately 3 and 11 people. Although I&amp;rsquo;ve seen larger teams they often suffer from communication and concurrency issues. If your team grows beyond these bounds - divide it into smaller teams. If you have a large problem that cannot be solved by a small team, divide it into a series of smaller problems.&lt;/p&gt;

&lt;p&gt;XP teams can be seen as like organic cells: expanding, contracting, splitting, and dying - as the environment dictates. Carefully considering the nature of the teams as they grow and divide can have useful/interesting repercussions due to &lt;a href=&#34;https://en.wikipedia.org/wiki/Conway%27s_law&#34;&gt;Conway&amp;rsquo;s Law&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Each team should be focused on quantifiable business outcomes if possible. This makes product ownership a much easier task as the metrics for success and failure are usually clearer and easier to gather. This also help ensure teams are delivering value.&lt;/p&gt;

&lt;p&gt;Each team should have a good mix of skills and experience. A team of all junior developers can sometimes result in poor architectural decisions. A team of all senior developers can result in &amp;ldquo;bike sheding&amp;rdquo; and long-running architectural debates, with little forward progress.&lt;/p&gt;

&lt;h2 id=&#34;lifestyle:d33dede33f5022565ebd53a746acb042&#34;&gt;Lifestyle&lt;/h2&gt;

&lt;p&gt;XP teams should co-locate if possible and work overlapping hours. This means each team should decide on a fourty-hour working week and only work those hours. This helps to create a sustainable development environment, reduce burnout, and limit churn.&lt;/p&gt;

&lt;p&gt;Engineer rotation between teams is useful to share knowledge, reduce team speciation, encourage inter-team empathy, and retain staff by providing variety.&lt;/p&gt;

&lt;p&gt;XP is of no use without good people in the teams. Cherish your good staff; without them your organisation is nothing.&lt;/p&gt;

&lt;h2 id=&#34;roles:d33dede33f5022565ebd53a746acb042&#34;&gt;Roles&lt;/h2&gt;

&lt;h3 id=&#34;product-owner:d33dede33f5022565ebd53a746acb042&#34;&gt;Product Owner&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;CEO of the product&lt;/li&gt;
&lt;li&gt;Owns the product vision and direction&lt;/li&gt;
&lt;li&gt;Prioritises backlog&lt;/li&gt;
&lt;li&gt;Accepts or rejects features (experiments)&lt;/li&gt;
&lt;li&gt;Works with engineers on outlining features&lt;/li&gt;
&lt;li&gt;Works with customers and stakeholders&lt;/li&gt;
&lt;li&gt;Understands metrics for success&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;anchor:d33dede33f5022565ebd53a746acb042&#34;&gt;Anchor&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Custodian of the process&lt;/li&gt;
&lt;li&gt;Responsible for the &amp;ldquo;flow&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Less likely to rotate (hence the name)&lt;/li&gt;
&lt;li&gt;Works closely with Product Owner refining the backlog&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;engineer:d33dede33f5022565ebd53a746acb042&#34;&gt;Engineer&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Pair programming&lt;/li&gt;
&lt;li&gt;Test-driven development&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Build quality in&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Enough architecture&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>XP</title>
      <link>http://xp-chemistry-set.cfapps.io/XP/</link>
      <pubDate>Mon, 20 Jul 2015 12:07:05 +0100</pubDate>
      
      <guid>http://xp-chemistry-set.cfapps.io/XP/</guid>
      <description>

&lt;h2 id=&#34;why-extreme-programming-xp:c438b98097d8d12fa7bdd3266892b54e&#34;&gt;Why Extreme Programming(XP)&lt;/h2&gt;

&lt;h3 id=&#34;lowering-the-cost-of-experimentation:c438b98097d8d12fa7bdd3266892b54e&#34;&gt;Lowering the cost of experimentation&lt;/h3&gt;

&lt;p&gt;Influential books such as &lt;a href=&#34;https://en.wikipedia.org/wiki/Lean_startup&#34;&gt;The Lean Startup&lt;/a&gt; and &lt;a href=&#34;http://www.amazon.co.uk/Four-Steps-Epiphany-Steven-Blank/dp/0976470705&#34;&gt;Four Steps to the Epiphany&lt;/a&gt; are based upon the idea that whoever can receive fastest feedback in an uncertain market will be the most successful. Traditional businesses are being disrupted by continuous innovators. XP embraces change so is a great fit for technology companies looking to out-learn their competition.&lt;/p&gt;

&lt;h3 id=&#34;xp-values:c438b98097d8d12fa7bdd3266892b54e&#34;&gt;XP Values&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Courage&lt;/li&gt;
&lt;li&gt;Communication&lt;/li&gt;
&lt;li&gt;Respect&lt;/li&gt;
&lt;li&gt;Feedback&lt;/li&gt;
&lt;li&gt;Simplicity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We use these values to evaluate our process and the tools in our chemistry set.&lt;/p&gt;

&lt;h3 id=&#34;why-not-scrum-kanban-six-sigma-etc:c438b98097d8d12fa7bdd3266892b54e&#34;&gt;Why not Scrum, Kanban, Six Sigma, etc.&lt;/h3&gt;

&lt;p&gt;XP is a fantantastic methodology when learning is paramount and uncertainty is high. Highly agile methodologies such as XP focus on reducing feedback latency so as to minimise the cost of experimentation. As you gain knowledge about your customers and environment you may look to increase efficiency and reduce waste in your process, moving to &lt;a href=&#34;https://en.wikipedia.org/wiki/Lean_manufacturing&#34;&gt;lean methodologies&lt;/a&gt;. As your product moves towards becoming a commodity, and is essentially mass-produced, you may look at processes such as &lt;a href=&#34;https://en.wikipedia.org/wiki/Six_Sigma&#34;&gt;Six Sigma&lt;/a&gt; to minimise deviation.&lt;/p&gt;

&lt;p&gt;Deciding which methodology to use in which circumstance can be difficult. Tools such as &lt;a href=&#34;http://www.wardleymaps.com/&#34;&gt;Wardley Mapping&lt;/a&gt; can be very helpful in this process. The following metrics are often useful when considering which methodology to use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;batch size&lt;/li&gt;
&lt;li&gt;desired feedback latency&lt;/li&gt;
&lt;li&gt;deviation&lt;/li&gt;
&lt;li&gt;cost of change&lt;/li&gt;
&lt;li&gt;cost of failure&lt;/li&gt;
&lt;li&gt;certainty on requirements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A word of warning here: whenever I ask product managers how certain they are about their market, or their requirements, they always respond that they are absolutely certain they have the correct requirements. &amp;lsquo;Certainty on requirements&amp;rsquo; in this instance refers to validated knowledge, ie. emperical evidence exists to substantiate the requirements. This is ususally in the form of a current product or service that is successful. Any new development is better suited to agile methodologies such as XP.&lt;/p&gt;

&lt;h2 id=&#34;the-pivotal-way-and-xp:c438b98097d8d12fa7bdd3266892b54e&#34;&gt;The Pivotal Way and XP&lt;/h2&gt;

&lt;p&gt;A large proportion of the information here has been learned through interactions and iterations with Pivotal. Thanks, Pivotal!&lt;/p&gt;

&lt;h2 id=&#34;cloud-foundry-and-xp:c438b98097d8d12fa7bdd3266892b54e&#34;&gt;Cloud Foundry and XP&lt;/h2&gt;

&lt;p&gt;Cloud Foundry&amp;rsquo;s incredibly fast Time-To-Value(TTV) dramatically lowers the cost of experimentation for application development. This makes Cloud Foundry an ideal fit for XP.&lt;/p&gt;

&lt;p&gt;To use a bad analogy - you were on a horse, now you&amp;rsquo;re in a race car. XP teaches you to drive with your eyes open.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>_index</title>
      <link>http://xp-chemistry-set.cfapps.io/_index/</link>
      <pubDate>Mon, 20 Jul 2015 11:25:59 +0100</pubDate>
      
      <guid>http://xp-chemistry-set.cfapps.io/_index/</guid>
      <description>&lt;p&gt;This site is a set of principles, patterns, and tools to help you learn about your environment. These tools can help you build an engine for experimentation, so you can iterate quickly towards successful products, services, and software.&lt;/p&gt;

&lt;p&gt;The basis for our learning is &lt;a href=&#34;https://en.wikipedia.org/wiki/Scientific_method&#34;&gt;Scientific Method&lt;/a&gt;. These concepts have been echoed in approaches such as the &lt;a href=&#34;https://en.wikipedia.org/wiki/PDCA&#34;&gt;Deming Cycle&lt;/a&gt; and the &lt;a href=&#34;https://en.wikipedia.org/wiki/OODA_loop&#34;&gt;OODA loop&lt;/a&gt;. The underlying pattern is to gain validated knowledge by using evidence to test hypotheses. The faster we can test our ideas, iterate, and gain knowledge, the greater our level of knowledge will become.&lt;/p&gt;

&lt;p&gt;The emphasis here should be &amp;lsquo;people over process&amp;rsquo; - please discuss and evaluate the information here with your colleagues and do not adopt the process in a dogmatic fashion.&lt;/p&gt;

&lt;p&gt;If your environment doesn&amp;rsquo;t allow for experimentation, due to constraints such as high cost of failure, this might not be the right set of patterns for you. Hopefully you can use these patterns to lower the cost of failure in your environment so you have more courage to experiment. Try things out.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>